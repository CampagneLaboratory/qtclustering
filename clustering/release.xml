<?xml version="1.0"?>
<project name="release" basedir="." default="release">
    <property name="lib" location="${basedir}/lib"/>
    <property name="svnant-lib" location="${lib}/svnant"/>
    <property name="svnhost" value="juniper.med.cornell.edu"/>
    <path id="svnant.classpath">
        <fileset dir="${svnant-lib}">
            <include name="*.jar"/>
        </fileset>
    </path>
    <taskdef resource="svntask.properties" classpathref="svnant.classpath"/>

    <tstamp>
        <format property="exportdate" pattern="yyyyMMddHHmmss"/>
    </tstamp>

    <target name="checklabel" unless="force">
        <fail unless="label" message="LABEL IS NOT SET"/>
    </target>

    <target name="init" depends="checklabel, gettag">
        <property name="exportdir" value="tmp-${tag}"/>
        <property name="releasedir" value="release-${tag}"/>

        <mkdir dir="${releasedir}"/>

        <property name="binfile" value="${releasedir}/${tag}-bin.zip"/>
        <property name="srcfile" value="${releasedir}/${tag}-src.zip"/>
        <property name="apidocfile" value="${releasedir}/${tag}-apidoc.zip"/>
        <property name="tagUrl" value="svn://${svnhost}/svn/tags/${tag}"/>
    </target>

    <target name="gettag" unless="tag">
        <!-- the default tag uses the current date and time -->
        <property name="defaulttag" value="clustering_${exportdate}"/>

        <input message="Enter a tag for the build [${defaulttag}]:"
               addproperty="tag"
               defaultvalue="${defaulttag}"/>
        <echo level="debug" message="tag is ${tag}"/>
    </target>

    <target name="tag" depends="init" unless="nocopy" description="Tag the current trunk release in SVN">
        <echo level="info" message="Tagging current directory with ${tag}"/>
        <svn>
    		<copy message="Clustering release ${label} ${tag}" srcUrl="svn://${svnhost}/svn/trunk/clustering"
    			  destUrl="${tagUrl}"/>
    	</svn>
    </target>

    <target name="export" depends="init" unless="noexport" description="Export a tagged version of the source code">
        <available property="exportdirexists" file="${exportdir}" type="dir"/>
        <fail if="exportdirexists" message="${basedir}/${exportdir} already exists."/>

        <mkdir dir="${exportdir}"/>
        <echo level="info" message="Exporting using tag: ${tag}"/>

        <!-- get the tagged version from svn -->
        <svn>
            <export srcUrl="${tagUrl}" destPath="${exportdir}/${tag}"/>
        </svn>
    </target>

    <target name="release" description="Tag and release build"
            depends="tag, source, binary, apidocs">
        <symlink link="release" resource="${releasedir}" overwrite="true" failonerror="false"/>
        <!-- copy the zip to the web folder -->
        <!-- todo -->
        <!-- notify webmaster about new file -->
        <!-- todo -->

        <!-- delete the temp files to clean up -->
        <delete dir="${exportdir}"/>
    </target>

    <target name="source" depends="distclean" description="assemble a source code release">
        <zip destfile="${srcfile}" comment="clustering version: ${tag}">
            <fileset dir="${exportdir}">
                <exclude name="${tag}/lib/**"/>
            </fileset>
        </zip>
    </target>

    <target name="binary" depends="jar, javadocs" description="assemble a binary release">
        <zip destfile="${binfile}" comment="clustering version: ${tag}">
            <fileset dir="${exportdir}">
                <include name="${tag}/clustering-core.jar"/>
                <include name="${tag}/clustering.jar"/>
                <include name="${tag}/javadocs/**"/>
                <include name="${tag}/COPYING"/>
                <include name="${tag}/README"/>
            </fileset>
        </zip>
    </target>

    <target name="javadocs" depends="init">
        <ant target="javadocs" dir="${exportdir}/${tag}" inheritall="true" inheritrefs="true">
            <property name="config" location="${basedir}/config"/>
        </ant>
    </target>
    <target name="apidocs" depends="javadocs">
        <!-- zip the api documentation for the website -->
        <zip destfile="${apidocfile}" basedir="${exportdir}" includes="${tag}/javadocs/**" comment="clustering version: ${tag}"/>
    </target>

    <target name="distclean" depends="export">
        <ant target="clean" dir="${exportdir}/${tag}" inheritall="true" inheritrefs="true"/>
    </target>

    <target name="jar" description="create and package the jar files">
        <ant target="jar" dir="${exportdir}/${tag}" inheritall="true" inheritrefs="true">
            <property name="buildstamp" value="${tag}"/>
            <property name="jarfile" value="clustering-core.jar"/>
        </ant>
        <copy file="${exportdir}/${tag}/clustering-core.jar" todir="${releasedir}"/>

        <ant target="autojar" dir="${exportdir}/${tag}" inheritall="true" inheritrefs="true">
            <property name="buildstamp" value="${tag}"/>
            <property name="autojarfile" value="clustering.jar"/>
        </ant>
        <copy file="${exportdir}/${tag}/clustering.jar" todir="${releasedir}"/>
    </target>
</project>
