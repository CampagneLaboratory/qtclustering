<project name="qtclustering" default="test" basedir=".">
    <tstamp>
        <!-- current time for buildstamp purposes -->
        <format property="buildstamp" pattern="yyyyMMddHHmmss"/>
    </tstamp>
    <tstamp>
        <format property="year" pattern="yyyy"/>
    </tstamp>

    <property environment="env" />
    <property name="classes" location="classes"/>
    <property name="lib" location="lib"/>
    <property name="src" location="src"/>
    <property name="javadocs" location="javadocs"/>
    <property name="logs" location="logs"/>
    <property name="config" location="config"/>
    <property name="test-src" location="test-src"/>
    <property name="test-classes" location="test-classes"/>
    <property name="cobertura-classes" location="cobertura-classes"/>
    <property name="test-results" location="test-results"/>
    <property name="jarfile" value="qtclustering-core.jar"/>
    <property name="autojarfile" value="qtclustering.jar"/>

    <property name="debug" value="on"/>
    <property name="optimize" value="on"/>
    <property name="deprecation" value="on"/>

    <path id="compile.classpath">
        <fileset dir="${lib}">
            <include name="*.jar"/>
            <exclude name="junit*.jar"/>
        </fileset>
    </path>

    <path id="classpath">
        <pathelement location="${classes}"/>
        <path refid="compile.classpath"/>
    </path>

    <path id="cobertura.classpath">
        <fileset dir="${lib}/cobertura">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${lib}">
            <include name="log4j-1.2.15.jar"/>
        </fileset>
    </path>

    <path id="test.classpath">
        <!--
              Note the classpath order: instrumented classes are before the
              original (uninstrumented) classes.  This is important.
          -->
        <pathelement location="${cobertura-classes}"/>
        <pathelement location="${classes}"/>
        <pathelement location="${test-classes}"/>
        <fileset dir="${lib}">
            <include name="junit*.jar"/>
        </fileset>
        <path refid="compile.classpath"/>
        <path refid="cobertura.classpath"/>
    </path>

    <!-- checkstyle source code analyzer task -->
    <taskdef resource="checkstyletask.properties" onerror="report">
        <classpath>
            <pathelement location="${lib}/checkstyle/checkstyle-all-4.3.jar"/>
        </classpath>
    </taskdef>

    <!-- See http://cobertura.sourceforge.net/ -->
    <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>

    <import file="testsupport/build.xml"/>

    <!-- =================================================================== -->
    <!-- Initialization target                                               -->
    <!-- =================================================================== -->
    <target name="init">
        <tstamp/>
        <mkdir dir="${classes}"/>
        <mkdir dir="${test-classes}"/>
        <!--  Create the logs directory -->
        <mkdir dir="${logs}"/>
        <!-- Create directory for test results -->
        <mkdir dir="${test-results}"/>
        <mkdir dir="${test-results}/html"/>
    </target>

    <target name="compile" depends="init" description="compiles the source code">
        <javac srcdir="${src}" destdir="${classes}" debug="${debug}"
               optimize="${optimize}" source="1.5" deprecation="${deprecation}"
               target="1.5">
            <classpath refid="compile.classpath"/>
        </javac>
    </target>

    <target name="compile-tests" depends="compile" description="Compile test source code">
        <javac srcdir="${test-src}" destdir="${test-classes}" debug="${debug}"
               optimize="${optimize}" source="1.5" deprecation="${deprecation}"
               target="1.5">
            <compilerarg value="-Xlint:unchecked"/>
            <classpath refid="test.classpath"/>
        </javac>
    </target>

    <target name="jar" depends="compile" description="Create a jar file for clustering tools">
        <jar jarfile="${jarfile}">
            <manifest>
                <attribute name="Specification-Title" value="QtClustering Tools"/>
                <attribute name="Specification-Vendor"
                           value="Institute for Computational Biomedicine (ICB), Weill Medical College of Cornell University"/>
                <attribute name="Implementation-Version" value="${label} (${buildstamp})"/>
                <attribute name="Implementation-Vendor"
                           value="Institute for Computational Biomedicine (ICB), Weill Medical College of Cornell University"/>
            </manifest>
            <fileset dir="${classes}"/>
        </jar>
    </target>

    <!-- =================================================================== -->
    <!-- Creates the API documentation                                       -->
    <!-- =================================================================== -->
    <target name="javadocs" depends="init" description="generates the API documentation">
        <mkdir dir="${javadocs}"/>
        <javadoc packagenames="edu.cornell.med.*" source="1.5"
                 sourcepath="${src}" destdir="${javadocs}" encoding="UTF-8"
                 author="true" version="true" windowtitle="QtClustering API ${label} (${buildstamp})"
                 header="QtClustering API ${label} (${buildstamp})">
            <link href="http://java.sun.com/j2se/1.5/docs/api/"/>
            <link href="http://fastutil.dsi.unimi.it/docs/"/>
            <classpath>
                <path refid="compile.classpath"/>
                <pathelement location="${classes}"/>
            </classpath>
            <bottom>
                <![CDATA[<i>Copyright &#169; 2005-${year} Institute for Computational Biomedicine, All Rights Reserved.</i>]]>
            </bottom>
        </javadoc>
    </target>

    <target name="clean" description="Cleans up the directory">
        <delete dir="${classes}"/>
        <delete dir="${javadocs}"/>

        <delete dir="${test-classes}"/>
        <delete dir="${test-results}"/>

        <delete dir="${cobertura-classes}"/>
        <delete file="cobertura.ser"/>

        <delete file="${autojarfile}"/>
        <delete file="${jarfile}"/>
        <delete dir="${logs}"/>
    </target>

    <target name="distclean">
        <delete includeemptydirs="true">
            <fileset dir="${basedir}">
                <include name="release*/**"/>
                <include name="tmp*/**"/>
                <exclude name="release.xml"/>
            </fileset>
        </delete>
    </target>

    <target name="cruisecontrol" depends="clean, cobertura-setup, findbugs,
                  test, jar, autojar, javadocs, pmd, cpd, checkstyle, cobertura-report"
            description="Run CruiseControl Build and Tests"/>

    <target name="test" depends="compile-tests, cobertura-instrument" description="Run JUnit Tests">
        <junit dir="${basedir}" fork="true" printsummary="yes" haltonfailure="yes" haltonerror="yes" showoutput="yes">
            <sysproperty key="net.sourceforge.cobertura.datafile"
                         file="${basedir}/cobertura.ser"/>
            <sysproperty key="log4j.debug" value="true"/>
            <sysproperty key="log4j.configuration" value="file:///${config}/log4j.properties"/>
            <classpath refid="test.classpath"/>

            <batchtest haltonfailure="no" haltonerror="no" todir="${test-results}"
                       failureproperty="test-failure" errorproperty="test-error">
                <formatter type="plain" usefile="false"/>
                <formatter type="xml"/>
                <fileset dir="${test-src}">
                    <include name="**/Test*.java"/>
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="${logs}">
            <fileset dir="${test-results}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${test-results}/html/junit"/>
        </junitreport>
        <condition property="tests-failed">
            <or>
                <isset property="test-error"/>
                <isset property="test-failure"/>
            </or>
        </condition>
        <fail message="One or more of the tests failed" if="tests-failed"/>
    </target>

    <target name="checkstyle" depends="init" description="Checks source against coding standards">
        <checkstyle config="${config}/checkstyle/qtclustering_checks.xml" failonviolation="true">
            <fileset dir="${src}"/>
            <classpath refid="test.classpath"/>
            <formatter type="xml" toFile="${test-results}/checkstyle_errors.xml"/>
            <formatter type="plain" useFile="false"/>
        </checkstyle>

        <xslt in="${test-results}/checkstyle_errors.xml" out="${test-results}/html/checkstyle/index.html"
              style="${config}/checkstyle/checkstyle.xsl"/>
    </target>

    <target name="cobertura-setup">
        <mkdir dir="${cobertura-classes}"/>
<!-- TODO: there seems to be an issue with cobertura and pj - tests are failing when cobertura is enabled
        <property name="with-cobertura" value="true"/>
-->
    </target>

    <target name="cobertura-instrument" if="with-cobertura">
        <delete file="cobertura.ser"/>

        <cobertura-instrument todir="${cobertura-classes}">
            <fileset dir="${classes}">
                <include name="**/*.class"/>
            </fileset>
        </cobertura-instrument>
    </target>

    <target name="cobertura-report" if="with-cobertura">
        <cobertura-report format="html" destdir="${test-results}/html/cobertura">
            <fileset dir="${src}"/>
        </cobertura-report>
    </target>

    <!-- See http://www.clarkware.com/software/JDepend.html -->
    <target name="jdepend">
        <jdepend format="xml" outputfile="${test-results}/jdepend-report.xml"
            classpathref="compile.classpath">
            <sourcespath>
                <pathelement location="src"/>
            </sourcespath>
            <classespath>
                <pathelement location="${classes}"/>
            </classespath>
        </jdepend>

        <xslt basedir="${test-results}" destdir="${test-results}/html/jdepend"
              includes="jdepend-report.xml"
              style="${ant.home}/etc/jdepend.xsl" />
    </target>

    <target name="autojar" description="Create a jar file for clustering tools using autojar" depends="compile">
        <manifest file="MANIFEST.MF">
            <attribute name="Specification-Title" value="QtClustering Tools"/>
            <attribute name="Specification-Vendor"
                       value="Institute for Computational Biomedicine (ICB), Weill Medical College of Cornell University"/>
            <attribute name="Implementation-Version" value="${label} (${buildstamp})"/>
            <attribute name="Implementation-Vendor"
                       value="Institute for Computational Biomedicine (ICB), Weill Medical College of Cornell University"/>
        </manifest>

        <java jar="${lib}/autojar/autojar.jar" dir="${basedir}" fork="true" failonerror="true">
            <classpath>
                <fileset dir="${lib}/autojar">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <arg value="-v"/>
            <arg value="-b"/>
            <arg value="-c"/>
            <arg pathref="classpath"/>
            <arg value="-e"/>
            <arg value="-o"/>
            <arg value="${autojarfile}"/>
            <arg value="-m"/>
            <arg value="MANIFEST.MF"/>
        	<arg value="edu/cornell/med/icb/clustering/*.class"/>
        </java>

        <delete file="MANIFEST.MF" failonerror="true"/>
	</target>
</project>
